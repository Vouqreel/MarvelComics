{"version":3,"sources":["components/errorMessage/error.png","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","AppBanner","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","to","renderItems","errorMessage","spinner","Spinner","disabled","style","display","onClick","ComicsPage"],"mappings":"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","file":"static/js/4.fbeed748.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.339576a7.png\";","import img from \"./error.png\";\r\n\r\nconst ErrorMessage = () => {\r\n\treturn <img src={img} alt=\"Error\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\tconst _apiKey = \"apikey=4fab0452b786e6a6fd4ea0afed8ce0bb\";\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? char.description : (char.description = \"No description here\"),\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn { loading, request, error, clearError };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import \"./appBanner.scss\";\nimport avengers from \"../../resources/img/Avengers.png\";\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className=\"app__banner\">\n\t\t\t<img src={avengers} alt=\"Avengers\" />\n\t\t\t<div className=\"app__banner-text\">\n\t\t\t\tNew comics every week!\n\t\t\t\t<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\n\t\t</div>\n\t);\n};\n\nexport default AppBanner;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setnewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tconst { loading, error, getAllComics } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true);\n\t\tgetAllComics(offset).then(onComicsListLoaded);\n\t};\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\t\tsetComicsList([...comicsList, ...newComicsList]);\n\t\tsetnewItemLoading(false);\n\t\tsetOffset(offset + 8);\n\t\tsetComicsEnded(ended);\n\t};\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\" key={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn <ul className=\"comics__grid\">{items}</ul>;\n\t}\n\n\tconst items = renderItems(comicsList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: comicsEnded ? \"none\" : \"block\" }}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}