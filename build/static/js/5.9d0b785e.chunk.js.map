{"version":3,"sources":["components/errorMessage/error.png","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/pages/SingleComicPage.js"],"names":["ErrorMessage","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","comic","newStyle","height","className","style","to","SingleComicPage","comicId","useParams","setComic","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","content"],"mappings":"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","file":"static/js/5.9d0b785e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.339576a7.png\";","import img from \"./error.png\";\r\n\r\nconst ErrorMessage = () => {\r\n\treturn <img src={img} alt=\"Error\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\tconst _apiKey = \"apikey=4fab0452b786e6a6fd4ea0afed8ce0bb\";\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? char.description : (char.description = \"No description here\"),\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn { loading, request, error, clearError };\r\n};\r\n","import { useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./singleComicPage.scss\";\r\n\r\nconst SingleComicPage = () => {\r\n\tconst { comicId } = useParams();\r\n\tconst [comic, setComic] = useState(null);\r\n\r\n\tconst { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateComic();\r\n\t}, [comicId]);\r\n\r\n\tconst updateComic = () => {\r\n\t\tclearError();\r\n\t\tgetComic(comicId).then(onComicLoaded);\r\n\t};\r\n\r\n\tconst onComicLoaded = (comic) => {\r\n\t\tsetComic(comic);\r\n\t};\r\n\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst spinner = loading ? <Spinner /> : null;\r\n\tconst content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{errorMessage}\r\n\t\t\t{spinner}\r\n\t\t\t{content}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n\tconst { title, description, pageCount, thumbnail, language, price } = comic;\r\n\tconst newStyle = {\r\n\t\theight: thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? \"auto\" : \"450px\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"single-comic\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={thumbnail}\r\n\t\t\t\t\talt={title}\r\n\t\t\t\t\tclassName=\"single-comic__img\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: newStyle.height,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"single-comic__info\">\r\n\t\t\t\t\t<h2 className=\"single-comic__name\">{title}</h2>\r\n\t\t\t\t\t<p className=\"single-comic__descr\">{description}</p>\r\n\t\t\t\t\t<p className=\"single-comic__descr\">{pageCount}</p>\r\n\t\t\t\t\t<p className=\"single-comic__descr\">Language: {language}</p>\r\n\t\t\t\t\t<div className=\"single-comic__price\">{price}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/comics\" className=\"single-comic__back\">\r\n\t\t\t\t\tBack to all\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SingleComicPage;\r\n"],"sourceRoot":""}